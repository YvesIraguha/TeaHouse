{"version":3,"sources":["../../src/controllers/auth.js"],"names":["User","Models","LoginController","req","res","body","email","password","user","findOne","where","comparedPassword","token","status","send","message","error"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;IAEQA,I,GAASC,kB,CAATD,I;;IAEFE,e;;;;;;;;;gCACeC,G,EAAKC,G,EAAK;AAAA,sBAGvBD,GAHuB,CAEzBE,IAFyB;AAAA,UAEjBC,KAFiB,aAEjBA,KAFiB;AAAA,UAEVC,QAFU,aAEVA,QAFU;AAK3B,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACS,OAAL,CAAa;AAAEC,QAAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAALA;AAAF;AAAT,OAAb,CAAnB;;AACA,UAAIE,IAAJ,EAAU;AACR,YAAMG,gBAAgB,GAAG,MAAM,4BAAiBJ,QAAjB,EAA2BC,IAAI,CAACD,QAAhC,CAA/B;;AACA,YAAII,gBAAJ,EAAsB;AACpB,cAAMC,KAAK,GAAG,MAAM,0BAAeJ,IAAf,CAApB;AACAJ,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,wBAAX;AAAqCH,YAAAA,KAAK,EAALA;AAArC,WAArB;AACD,SAHD,MAGO;AACLR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;AACD;AACF,OARD,MAQO;AACLZ,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAArB;AACD;AACF;;;;;eAGYd,e","sourcesContent":["import Models from \"../../models\";\nimport { comparePasswords, createJwtToken } from \"../helpers/auth\";\n\nconst { User } = Models;\n\nclass LoginController {\n  static async login(req, res) {\n    const {\n      body: { email, password }\n    } = req;\n\n    const user = await User.findOne({ where: { email } });\n    if (user) {\n      const comparedPassword = await comparePasswords(password, user.password);\n      if (comparedPassword) {\n        const token = await createJwtToken(user);\n        res.status(200).send({ message: \"Logged in successfully\", token });\n      } else {\n        res.status(400).send({ error: \"Invalid credentials\" });\n      }\n    } else {\n      res.status(404).send({ error: \"Invalid credentials\" });\n    }\n  }\n}\n\nexport default LoginController;\n"],"file":"auth.js"}