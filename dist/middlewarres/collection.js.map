{"version":3,"sources":["../../src/middlewarres/collection.js"],"names":["checkCollectionPresence","req","res","next","id","params","collection","Collection","findOne","where","status","send","error"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,uBAAuB,GAAG,eAA1BA,uBAA0B,CAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAAA,MACvDC,EADuD,GAChDH,GAAG,CAACI,MAD4C,CACvDD,EADuD;AAE/D,MAAME,UAAU,GAAG,MAAMC,mBAAWC,OAAX,CAAmB;AAAEC,IAAAA,KAAK,EAAE;AAAEL,MAAAA,EAAE,EAAFA;AAAF;AAAT,GAAnB,CAAzB;;AACA,MAAI,CAACE,UAAL,EAAiB;AACfJ,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB;AACD,GAFD,MAEO;AACLX,IAAAA,GAAG,CAACK,UAAJ,GAAiBA,UAAjB;AACAH,IAAAA,IAAI;AACL;AACF,CATM","sourcesContent":["import { Collection } from \"../../models\";\n\nexport const checkCollectionPresence = async (req, res, next) => {\n  const { id } = req.params;\n  const collection = await Collection.findOne({ where: { id } });\n  if (!collection) {\n    res.status(404).send({ error: \"Collection does not exist\" });\n  } else {\n    req.collection = collection;\n    next();\n  }\n};\n"],"file":"collection.js"}