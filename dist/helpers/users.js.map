{"version":3,"sources":["../../src/helpers/users.js"],"names":["SECRET_KEY","process","env","resetPasswordToken","email","token","jwt","sign","algorithm","expiresIn","error","Error"],"mappings":";;;;;;;;;AAAA;;IAEQA,U,GAAeC,OAAO,CAACC,G,CAAvBF,U;;AAED,IAAMG,kBAAkB,GAAG,eAArBA,kBAAqB,CAAMC,KAAN,EAAe;AAC/C,MAAI;AACF,QAAMC,KAAK,GAAG,MAAMC,yBAAIC,IAAJ,CAAS;AAAEH,MAAAA,KAAK,EAALA;AAAF,KAAT,EAAoBJ,UAApB,EAAgC;AAClDQ,MAAAA,SAAS,EAAE,OADuC;AAElDC,MAAAA,SAAS,EAAE;AAFuC,KAAhC,CAApB;AAIA,WAAOJ,KAAP;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF,CAVM","sourcesContent":["import jwt from \"jsonwebtoken\";\n\nconst { SECRET_KEY } = process.env;\n\nexport const resetPasswordToken = async email => {\n  try {\n    const token = await jwt.sign({ email }, SECRET_KEY, {\n      algorithm: \"HS256\",\n      expiresIn: \"1h\"\n    });\n    return token;\n  } catch (error) {\n    throw new Error(\"Something went wrong while creating a token\");\n  }\n};\n"],"file":"users.js"}